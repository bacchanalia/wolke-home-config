#!/usr/bin/perl
use strict;
use warnings;
use lib `dirname $0 | tr -d '\n'`;
use ScriptScript;

my $dir = '/etc/bash_completion.d';

<<<<<<< HEAD
sub getMntNamesSub($);
sub getReposSub();
=======
sub getFctImpls();
>>>>>>> deb5cda... install[bash-completion]: pull function impls into one sub

sub main(@) {
  getRoot @_;

  my $mntNamesSub = "_mntnames()" . ${getFctImpls()}{"_mntnames"};
  my $reposSub = "_repo_lists()" . ${getFctImpls()}{"_repo_lists"};
  my $files = {
    'sudo-aliases' => "complete -F _root_command suod sudp\n",
    'spawn' => "complete -F _root_command s spawn spawnex spawnexsudo\n",
    'mnt' => "$mntNamesSub\ncomplete -F _mntnames mnt\n",
    'mnto' => "$mntNamesSub\ncomplete -F _mntnames mnto\n",
    'update-repo' => "$reposSub\ncomplete -F _repo_lists update-repo\n",
  };

  for my $file(keys %$files){
    my $content = $$files{$file};
    open FH, "> $dir/$file" or die "Couldnt open file $dir/$file\n";
    print FH $content;
    close FH;
  }
}

sub getFctImpls(){
  return {
    "_mntnames" => '{
      local cur names
      cur="${COMP_WORDS[COMP_CWORD]}"
      mntexe=$1
      opts="-m -u -g -n -l --usb --no-usb --card --no-card --other --no-other"

      if [ ${#COMP_WORDS[@]} == 3 ]; then
        names=`$mntexe -n`
        COMPREPLY=( $(compgen -W "$names" -- $cur) )
      elif [ ${#COMP_WORDS[@]} == 2 ]; then
        COMPREPLY=( $(compgen -W "$opts" -- $cur) )
      else
        COMPREPLY=()
      fi
    }',

    "_repo_lists" => '{
      local cur
      cur="${COMP_WORDS[COMP_CWORD]}"

      COMPREPLY=($(
        find /etc/apt/sources.list.d/ \
          -iname "*$cur*.list" \
          -exec basename {} \; \
          2> /dev/null \
        | sort \
      ))
      return 0
    }',
  };
}

&main(@ARGV);
