#!/usr/bin/perl
use strict;
use warnings;
use Switch;
use Date::Manip;

my $URL = 'http://localhost:8080/eScribePortal/NightlyPublishingServlet';
my $PASSWORD = 'ij9328rjc0ck70732edsajdf71195afad2ij39232jd29ijr';

print 'Start: '.`date`;

my $usage ="
Usage: publish -PARAM VAL -PARAM VAL ...

params are passed up to the nightly publishing servlet using curl
  -date        => date {REQUIRED}
     {e.g.: 01/01/2000, 08-26-1999, 12hrsago}
     the date to be published, separated by /s or -s
     NOTE:
     the identifier '12hrsago' can be substituted for a date
     the date MM-DD-YYYY of 12 hours ago is used
     e.g.: running 'publish -date 12hrsago' at 04:32 in the morning on 08/21/2008
     yields the same result as running 'publish -date 08-20-2008'

  -jobids      => ###:###:###...###
     {e.g.: 100, 100:200:300}
     the jobs to be published {useful for re-running failed job(s)}

  -debugemail  => address
  	 {e.g.: jim.smith\@gmail.com, shmapple\@bamama.com}
     SENDS ALL EMAILS TO THE SPECIFIED ADDRESS,
     INSTEAD OF THE DESIGNATED RECIPIENT.

  -adminemail  => address
     {e.g.: jim.smith\@gmail.com, shmapple\@bamama.com}
     Specifies the recipient of the admin email {overridden by debugemail}

  -jobthreads  => #
     {e.g.: 1, 20}
     The number of jobs that are run simultaneously.
     Use 1 for linear execution of jobs.
     {Note that doc threads is independent of job threads}
     MAX TOTAL THREADS = jobthreads x docthreads

  -docthreads  => #
     {e.g.: 1, 20}
     The number of docs that are run simultaneously PER JOB.
     Use 1 for linear execution of documents.
     {Note that doc threads is independent of job threads}
     MAX TOTAL THREADS = jobthreads x docthreads

  -debugdocids => ###:###:###...###  {e.g.: 15000, 15000:15001:15002}
     *FOR DEBUG PURPOSES ONLY*
     runs the specified docs through publishing,
     with no respect whatsoever to any rules or regulations regarding jobs.

password is also a param, but not a valid argument to this script
it is passed up automatically
";

my %params;
$params{'-password'} = $PASSWORD;

if($#ARGV %2 != 1){
  die $usage;
}

my $paramCount = @ARGV * 0.5;
for(my $i=0; $i<$paramCount; $i++){
  $params{ $ARGV[$i*2] } = $ARGV[$i*2+1];
}

if(not exists $params{'-date'}){
  die $usage;
}

if(not exists $params{'-password'}){
  die $usage;
}


if($params{'-date'} eq '12hrsago'){
  my $yday = UnixDate(DateCalc("12 hours ago",`date`),"%m-%d-%Y");
  print "USING DATE: $yday\n"; 
  $params{'-date'} = $yday;
}


my $paramString = '';
foreach my $key (keys %params){
  my $val = $params{$key};
  switch($key){
    case '-password'    { die $usage if $val !~ /^$PASSWORD$/}
    case '-date'        { die $usage if $val !~ /^\d\d[\-\/]\d\d[\-\/]\d\d\d\d$/}
    case '-jobids'      { die $usage if $val !~ /^(\d+:)*\d+$/}
    case '-debugemail'  { die $usage if $val !~ /^.*$/}
    case '-adminemail'  { die $usage if $val !~ /^.*$/}
    case '-jobthreads'  { die $usage if $val !~ /^\d+$/}
    case '-docthreads'  { die $usage if $val !~ /^\d+$/}
    case '-debugdocids' { die $usage if $val !~ /^(\d+:)*\d+$/}
    else                { die $usage}
  }
  $key = substr $key, 1;
  $paramString .= "-d \"$key=$val\" ";
}

my $curlCmd = "curl $paramString $URL -k";

print "$curlCmd\n";
system $curlCmd;

print 'Finish: '.`date`;

