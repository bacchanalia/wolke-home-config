#!/usr/bin/perl
use strict;
use warnings;

my $dir = "$ENV{HOME}/openvpn";
my $status = "status";
my $user = "ewolk";
my $defaultName = "escribe";

sub ensureRoot();
sub getPasswordFile();
sub symlinkPem($);
sub run(@);

my $usage = "Usage:
  $0 on|off|toggle [CONF_NAME]
";

sub main(@){
  ensureRoot();
  my $cmd = shift;
  my $name = shift;

  die $usage if @_ != 0 or not defined $cmd or $cmd !~ /^(on|off|toggle)$/;
  chdir $dir or die "couldnt set cwd to $dir\n";

  $name = $defaultName if not defined $name;
  $name =~ s/\.conf$//;
  die "$dir/$name.conf not found\n" if not -f "$name.conf";

  my $procPtrn = "^openvpn.*--config $name\\.conf ";

  if($cmd eq 'on'){
    print "starting, maybe...\n";

    symlinkPem($name);

    run "rm", "-f", "status";
    run "openvpn",
      "--auth-user-pass", getPasswordFile(),
      "--config", "$name.conf",
      "--status", $status,
      "--reneg-sec", 0,
      "1";
  }elsif($cmd eq 'off'){
    print "stopping, maybe...\n";
    run "pkill", "-f", $procPtrn;
  }elsif($cmd eq 'toggle'){
    run "pgrep -f '$procPtrn' >/dev/null 2>/dev/null";
    exec $0, ($? == 0 ? 'off' : 'on'), defined $name ? ($name) : ();
  }
}

sub ensureRoot(){
  if(`whoami` ne "root\n"){
    print "rerunning as root\n";
    exec "sudo", $0, @ARGV;
  }
}

sub getPasswordFile(){
  my $pass = `yubi`;
  chomp $pass;

  my $file = "/tmp/openvpn-auth-" . time;
  open FH, "> $file" or die "Cant write to $file\n";
  print FH "$user\n";
  print FH "$pass\n";
  close FH;
  return $file;
}

sub symlinkPem($){
  my $name = shift;
  my $pem = "$name.pem";

  my $hostname = `hostname`;
  chomp $hostname;

  my $hostPem = "$pem.$hostname";
  my $defaultPem = "$pem.default";

  run "rm", "-f", $pem if -l $pem;
  die "$pem exists and is not a symlink" if -e $pem;

  run "ln", "-s", $hostPem, $pem if not -e $pem and -e $hostPem;
  run "ln", "-s", $defaultPem, $pem if not -e $pem and -e $defaultPem;

  die "could not select $pem\n" if not -e $pem;
}

sub run(@){
  print "@_\n";
  system @_;
}

&main(@ARGV);
