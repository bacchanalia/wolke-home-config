#!/usr/bin/perl
use strict;
use warnings;

my $HBIN = `echo -n \$HOME/bin`;

my $height = shift;

my $vol = `$HBIN/pulse-volume`;
chomp $vol;
if($vol !~ /^\d+$/){
  print "pulse volume read error\n";
  die "pulse volume read error\n";
}

my $mute = `$HBIN/pulse-mute sink`;
chomp $mute;
if($mute !~ /^sink is( not)? muted$/){
  print "pulse mute read error\n";
  die "pulse mute read error\n";
}
my $isMute = not defined $1;

my $volColor;
my $ampVolColor;
if($isMute){
  $volColor = "red";
  $ampVolColor = "pink";
}else{
  $volColor = "green";
  $ampVolColor = "blue";
}

my $volHeight = int($height * ($vol / 100.0));
my $ampVolHeight = 0;
if($volHeight > $height){
  $ampVolHeight = $volHeight - $height;
  $volHeight = $height;
}

my $volStart = $height - $volHeight;
my $ampVolStart = $height - $ampVolHeight;

my $bgRect = "^fg(black)^r(5x$height)^fg()";
my $volRect = "^fg($volColor)^r(3x$volHeight)^fg()";
my $ampVolRect = "^fg($ampVolColor)^r(3x$ampVolHeight)^fg()";

my $out = '';
$out .= "^p(;-8)";
$out .= $bgRect;
$out .= "^ib(1)";

$out .= "^p(-3;$volStart)";
$out .= $volRect;
$out .= "^p(;-$volStart)";

$out .= "^p(-3;$ampVolStart)";
$out .= $ampVolRect;
$out .= "^p(;-$ampVolStart)";

$out .= "^ib(0)";
$out .= "^p(3;8)";

print "$out\n";

