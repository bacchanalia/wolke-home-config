#!/usr/bin/perl
use strict;
use warnings;
use Time::HiRes qw(sleep time);
use IO::Handle;
use IPC::Open2;
use POSIX ":sys_wait_h";

sub startPrinter($);

my $height = 36;
for(my $i=0; $i<@ARGV; $i++){
  if($ARGV[$i] eq '-h'){
    $i++;
    if($i<@ARGV and $ARGV[$i] =~ /^\d+$/){
      $height = $ARGV[$i];
      last;
    }
  }
}
for(my $i=0; $i<@ARGV; $i++){
  if($ARGV[$i] eq '-x'){
    $ARGV[$i] = '';
    $ARGV[$i+1] = '';
  }
}



my $ghcprinter = "$ENV{HOME}/.dzen2/printers/ghcprinter";
my $spacer = ["echo", "-n", "^p(2)^p(;-8)^fg(black)^r(3x$height)^fg()^p(;8)^p(2)"];
my $smallSpace = ["echo", "-n", "^p(2)"];

my @printerCommands = (
  [$ghcprinter, "NetStats"],
  $spacer,
  [$ghcprinter, "Net"],
  $spacer,
  [$ghcprinter, "Fcrondyn"],
  $spacer,
  [$ghcprinter, "Klomp"],
  [$ghcprinter, "Volume"],
  [$ghcprinter, "Mic"],
  $spacer,
  [$ghcprinter, "PidginPipe"],
  [$ghcprinter, "Thunderbird"],
  [$ghcprinter, "Ekiga"],
  $spacer,
  [$ghcprinter, "CpuScaling"],
  $smallSpace,
  [$ghcprinter, "CpuFreqs"],
  $smallSpace,
  [$ghcprinter, "Fan"],
  [$ghcprinter, "Brightness"],
  [$ghcprinter, "PingMonitor", "www.google.com", "G", "5"],
  [$ghcprinter, "Openvpn"],
  [$ghcprinter, "PingMonitor", "source.escribe.com", "E", "5"],
  $spacer,
  [$ghcprinter, "TPBattStatApplet"],
  $spacer,
  [$ghcprinter, "Clock"],
  $smallSpace,
);

my @monitorCommands = (
  $spacer,
  [$ghcprinter, "CpuMonitor"],
  $smallSpace,
  [$ghcprinter, "MemMonitor"],
);
sub loop($$$$$);

sub main(@){
  my @dzenArgs = @_;
  my $monitorWidth = 7+(2+$height)*2;
  my $left = 750;
  if(fork()){
    loop $left, $monitorWidth, 500, \@dzenArgs, \@monitorCommands;
  }else{
    loop $left+$monitorWidth, 0, 400, \@dzenArgs, \@printerCommands;
  }
}

sub loop($$$$$){
  my ($x, $w, $millis, $dzenArgs, $cmds) = @_;
  $x = $x == 0 ? "" : "-x $x";
  $w = $w == 0 ? "" : "-w $w";
  
  my $dzenFH;
  open $dzenFH, "| dzen2 $w $x -ta r @$dzenArgs";
  $dzenFH->autoflush(1);

  my @printers = map {[$_, "---", undef, undef]} @$cmds;

  while(1){
    my $start = time;
    print $dzenFH getOutput(\@printers);
    print $dzenFH "\n";
    my $end = time;
    my $elapsed = $end - $start;
    my $toSleep = ($millis / 1000.0) - $elapsed;
    if($toSleep > 0){
      sleep $toSleep;
    }
  }
}


sub readHandle($){
  my $fh = shift;
  my @lines = $fh->getlines();
  my $out = @lines > 0 ? $lines[-1] : "";
  $out =~ s/\n*//g;
  return $out;
}

sub getOutput($){
  my $printers = shift;
  my $output = '';
  for my $p(@$printers){
    my ($cmd, $prev, $pid, $fh) = @$p;
    my $out = readHandle $fh if defined $fh;
    $out = $prev if not defined $out or $out eq '';
    $output .= $out;
    $$p[1] = $out;
    waitpid $$p[2], WNOHANG if defined $$p[2];
    startPrinter $p if not defined $$p[2] or not kill 0, $$p[2];
  }
  return $output;
}

sub startPrinter($){
  my $p = shift;
  my ($cmd, $prev, $pid, $fh) = @$p;
  $pid = open2 $fh, undef, @$cmd;
  $fh->blocking(0);
  $$p[2] = $pid;
  $$p[3] = $fh;
}

&main(@ARGV);
