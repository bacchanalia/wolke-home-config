#!/usr/bin/perl
use strict;
use warnings;

my $lastScanFile = `echo -n \$HOME/wifi/lastscan`;

my $dev = `wlan`;
chomp $dev;

my $iwlist;
if(@ARGV == 0){
  $iwlist = `sudo iwlist $dev scan`;
  if($iwlist =~ s/^$dev\s*Scan completed :\n//){
    open FH, "> $lastScanFile";
    print FH $iwlist;
  }
}elsif(@ARGV == 1 and $ARGV[0] eq '-l'){
  $iwlist = `cat $lastScanFile`;
}else{
  die "Usage: $0   or  $0 -l\n";
}


my @cells = split /          Cell \d+ - /, $iwlist;
shift @cells;

sub parseCell($){
  my $cell = shift;
  $cell =~ /\s*ESSID:"(.*)"/;
  my $essid = $1;
  $cell =~ /\s*Quality=(\d+)\/(\d+)/;
  my $quality = $2 == 0 ? '??????' : sprintf "%.2f%%", $1*100.0/$2;
  $quality = ' 'x(7 - length $quality) . $quality;
  my $type = '?';
  if($cell =~ /WPA2/){
    $type = 'WPA2';
  }elsif($cell =~ /WPA/){
    $type = 'WPA';
  }
  return [$essid,$quality,$type];
}

sub trimPad($$){
  my ($s, $l) = @_;
  if(length $s > $l){
    $s = substr($s, 0, $l-2) . "^^";
  }
  return $s . ' 'x($l - length $s);
}

for my $cell(map {parseCell $_} @cells){
  print trimPad($$cell[0], 20) . " | " . $$cell[1] . " | " . $$cell[2] . "\n";
}

