#!/usr/bin/perl
use strict;
use warnings;

my $PRINTERS = `echo -n \$HOME/.dzen2/printers`;

my $DIR = "/tmp";
my $LOG = "cpu_freq_log.txt";

system "killall i7z";
chdir $DIR;

if(fork()){
  exec "gnome-terminal " .
            "--working-directory $DIR " .
            "--title xmonad-hidden " .
            "-x sudo i7z -w l";
}

sub getFreqDisplay($){
  my @freqs = @{shift()};
  my $out = '';
  my $sep = '^p(4)';
  for(my $i=0; $i<@freqs; $i++){
    if($i == $#freqs){
      if($i != 0){
        $out .= $sep;
      }
      $out .= $freqs[$i];
    }else{
      if($i != 0){
        $out .= $sep;
      }
      my $top = $freqs[$i];
      my $bot = $freqs[$i+1];
      my $rows = `$PRINTERS/two-text-rows $top $bot 36`;
      chomp $rows;
      $out .= $rows;
      $i++;
    }
  }
  return $out;
}

my $maxSeen = 0;
while(1){
  sleep 1;
  system "pidof i7z > /dev/null";
  if($? != 0){
    print "XXXXXXX\n";
    die "i7z is not running\n";
  }
  my @freqs;
  for my $line(`cat $DIR/$LOG`){
    chomp $line;
    if($line =~ /^\d{10}(\.\d+)?$/){
      #ignore lines that look like times
      next;
    }elsif($line =~ /^\d+\.\d+$/){
      $line /= 100;
      $line = int($line);
      $line = "0$line" if $line < 10;
    }else{
      $line = '??';
    }
    push @freqs, $line;
  }
  if(@freqs > $maxSeen){
    $maxSeen = scalar @freqs;
  }
  while(@freqs < $maxSeen){
    push @freqs, '??';
  }
  print getFreqDisplay(\@freqs) . "\n";
}
