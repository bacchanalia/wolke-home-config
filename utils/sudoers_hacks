#!/usr/bin/perl
use strict;
use warnings;

if(`whoami` ne "root\n"){
  exec "sudo $0 @ARGV";
}

my $user = $ENV{SUDO_USER};
if(not defined $user){
  $user = $ENV{USER};
}
if($user eq "root" or length $user == 0){
  die "USER or SUDO_USER var must be set and not root {e.g.: SUDO_USER=john $0}";
}

print "for admin_group_rename:\n";
my $cmd = "groupmod -n admin_group admin";
print "$cmd\n";
system $cmd;



my %sudoersdFiles = (
  admin_group_rename => ''
    . "#hack to rename admin => admin_group\n"
    . "#stops ~/.sudo_as_admin_successful file being created\n"
    . "%admin_group ALL=(ALL) ALL\n"
    ,
);

my @addtlCustomExecNames = qw(led);
my @customExecNames = split /\n/, `ls -1 \$HOME/utils/sudoers`;

@customExecNames = (@customExecNames, @addtlCustomExecNames);
my @customExecPaths = map {"/usr/local/sbin/$_"} @customExecNames;

system "cp -ar \$HOME/utils/sudoers/* /usr/local/sbin";
system "chown root.root /usr/local/sbin/*";

my @defaults = (
  "Defaults\tenv_keep += \"HOME\"",
);

my %sudoersd = (
  "$user-custom" => \@customExecPaths,
  "$user-net" => [qw(
    /sbin/ifconfig
    /sbin/iwconfig
    /sbin/iwlist
    /sbin/dhclient
    /sbin/wpa_supplicant
    /usr/local/bin/ifdev
    /usr/local/bin/resolv
    /usr/local/bin/tether
    /usr/local/bin/wauto
    /usr/local/bin/wired
    /usr/local/bin/wconnect
    /usr/local/bin/wscan
    /usr/local/bin/wstatus
  )],
  "$user-system" => [qw(
    /sbin/poweroff
    /sbin/reboot
    /usr/sbin/pm-suspend
    /usr/sbin/pm-hibernate
  )],
  "$user-fcron" => [qw(
    /usr/local/sbin/fcron
    /usr/local/bin/fcrondyn
    /usr/local/bin/fcrontab
  )],
  "$user-i7z" => [qw(
    /usr/sbin/i7z
  )],
);

system "cp /etc/sudoers.d/README /tmp/sudoersd_readme";
system "rm /etc/sudoers.d/*";
system "mv /tmp/sudoersd_readme /etc/sudoers.d/README";

sub writeSudoersdFile($$){
  my $baseFileName = shift;
  my $content = shift;
  my $file = "/etc/sudoers.d/$baseFileName";

  print "\n\nWriting file $file:\n";
  print "-----\n";
  open FH, "| sudo tee $file";
  print FH $content;
  close FH;
  system "chmod 0440 $file";
  print "-----\n";
}

sub npLine($){
  return "$user\tALL=(ALL) NOPASSWD: $_[0]\n";
}
for my $baseFileName(keys %sudoersd){
  my $execs = $sudoersd{$baseFileName};
  my $out = join '', map {npLine $_} @$execs;
  writeSudoersdFile($baseFileName, $out);
}
if(@defaults > 0){
  writeSudoersdFile("default", join("\n", @defaults) . "\n");
}

for my $baseFileName(keys %sudoersdFiles){
  writeSudoersdFile $baseFileName, $sudoersdFiles{$baseFileName};
}

