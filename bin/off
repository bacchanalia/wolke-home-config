#!/usr/bin/env python
import gtk
import sys
import os

class ActionButton(gtk.Button):
  def __init__(self, text, cmd=None, action=None):
    gtk.Button.__init__(self, text)
    self.cmd = cmd
    self.action = action
    self.connect("clicked", self.click)
  def click(self, widget):
    if self.cmd != None:
      print self.cmd
      os.system(self.cmd)
    if self.action != None:
      print str(self.action)
      self.action()
    
class Gui():
  def __init__(self):
    self.box = gtk.VBox()
    self.box.add(gtk.Label("escape cancels, up/down/enter to select"))
    self.box.add(ActionButton("Shutdown",  "gksudo poweroff"    , sys.exit))
    self.box.add(ActionButton("Reboot",    "gksudo reboot"      , sys.exit))
    self.box.add(ActionButton("Sleep",     "gksudo pm-suspend"  , sys.exit))
    self.box.add(ActionButton("Hibernate", "gksudo pm-hibernate", sys.exit))
    self.box.add(ActionButton("Cancel",    None                 , sys.exit))
  def mainWindow(self):
    window = gtk.Window()
    window.set_default_size(300, 500)
    window.set_position(gtk.WIN_POS_CENTER)
    window.set_title("Off")
    window.add(self.getGtkWidget())

    window.add_events(gtk.gdk.KEY_PRESS_MASK)
    window.connect("key_press_event", self.keyPress)

    window.connect("destroy", gtk.main_quit) 
    window.show_all()
    gtk.main()
  def keyPress(self, widget, event):
    if event.keyval == gtk.keysyms.Escape:
      sys.exit()
  def getGtkWidget(self):
    return self.box

if __name__ == "__main__":
  Gui().mainWindow()

