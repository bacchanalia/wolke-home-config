#!/usr/bin/perl
use strict;
use warnings;
use Time::HiRes qw(sleep);

my $PRINTERS = "\$HOME/.dzen2/printers";

my $curGov = undef;
for my $dir(`find /sys/devices/system/cpu -regex '/sys/devices/system/cpu/cpu[0-9]*'`){
  chomp $dir;
  my $gov = "$dir/cpufreq/scaling_governor";
  my $currentGov = `cat $gov`;
  chomp $currentGov;
  if(defined $curGov and $curGov ne $currentGov){
    $curGov = '?';
    last;
  }
  $curGov = $currentGov;
}

if(not defined $curGov or length $curGov < 2){
  $curGov = '?';
}

if($curGov eq '?'){
  my $home = `echo -n \$HOME`;
  open FH, "< $home/.cpu_governor";
  my $lastGov = <FH>;
  chomp $lastGov;
  close FH;

  if($lastGov ne 'powersave'
      and $lastGov ne 'performance'
      and $lastGov ne 'ondemand'
      and $lastGov ne 'conservative'
      and $lastGov ne 'userspace'){
    system "cpu-set $curGov";
    $curGov = '!';
  }elsif($curGov ne $lastGov){
    system "cpu-set $lastGov";
    $curGov = '!';
  }

}

my %bgs = qw(
  powersave    red
  performance  green
  ondemand     blue
  userspace    purple
  other        white
);

my $fg = 'black';
my $bg = $bgs{$curGov};
$bg = $bgs{other} if not defined $bg;

my $width = 2;

while(length $curGov < $width*2){
  if($curGov eq ''){
    $curGov = '#' x $width*2;
  }
  $curGov = "$curGov$curGov";
}

my $top = substr $curGov, 0, $width;
my $bot = substr $curGov, $width, $width;
if($curGov eq 'userspace'){
  my $setspeed = `cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_setspeed`;
  chomp $setspeed;
  if($setspeed =~ /^\d+$/){
    #if setspeed is precise down to 10MHz, it means turboboost so show 4 digs
    if(int($setspeed / 10000) * 10000 != $setspeed){
      $top = substr $setspeed, 0, $width;
      $bot = substr $setspeed, $width, $width;
    }else{
      $setspeed /= 1000;
      $setspeed = '0' x ($width*2 - length $setspeed) . $setspeed;
      $bot = substr $setspeed, 0, $width;
    }
  }
}
my $msg = `$PRINTERS/two-text-rows $top $bot 36`;
chomp $msg;
print "^bg($bg)^fg($fg)$msg^fg()^bg()";
