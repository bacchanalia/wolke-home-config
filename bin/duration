#!/usr/bin/perl
use strict;
use warnings;

my $usage = "Usage:
  $0 [-m] [-a] song             print length in seconds
  $0 [-m] [-a] song song ..     print length and filename, one per line
  $0 [-m] [-a] -t song song ..  print sum of length in seconds of all inputs
    -a  =>  use avconv instead of midentify
    -m  =>  print values in h:mm:ss or m:ss instead of s.ss
";

sub getLen($$);
sub formatLen($$);

sub main(@){
  die $usage if @_ == 0;
  (my $isTotal = 0, my $useAvconv = 0, my $isSingle = 0, my $hms = 0);
  die $usage if $_[0] eq '-h' or $_[0] eq '--help';

  if($_[0] eq '-m'){
    $hms = 1;
    shift;
  }
  if($_[0] eq '-a'){
    $useAvconv = 1;
    shift;
  }
  if($_[0] eq '-t'){
    $isTotal = 1;
    shift;
  }
  $isSingle = @_ == 1;

  my $total = 0;
  for my $song(@_){
    my $len = getLen $song, $useAvconv;
    $total += $len;
    if(not $isTotal){
      print formatLen($hms, $len);
      print " $song" if not $isSingle;
      print "\n";
    }
  }
  if($isTotal){
    print formatLen($hms, $total);
    print "\n";
  }
}
sub getLen($$){
  my ($song, $useAvconv) = @_;

  my $shellSong = $song;
  $shellSong =~ s/'/'\\''/g;
  $shellSong = "'$shellSong'";
  system "stat $shellSong 1>/dev/null 2>/dev/null";
  die "Could not stat file $song\n" if $? != 0;

  my $len;
  if($useAvconv){
    my $avconfInfo = `avconv -i $shellSong 2>&1`;
    if($avconfInfo =~ /Duration: (\d+):(\d+):(\d+(?:\.\d+))/){
      $len = $3 + ($2*60) + ($1*60*60);
    }
  }else{
    my $mplayerInfo = `midentify $shellSong 2>/dev/null`;
    if($mplayerInfo =~ /^ID_LENGTH=(\d+(?:\.\d+)?)$/m){
      $len = $1;
    }
  }

  if(defined $len){
    return $len;
  }else{
    die "Unknown length for input: $song\n";
  }
}

sub formatLen($$){
  my ($hms, $len) = @_;
  if($hms){
    $len = int(0.5 + $len);
    my $h = int($len / (60*60));
    my $m = int($len % (60*60) / (60));
    my $s = $len - ($m*60) - ($h*60*60);
    $s = "0$s" if $s < 10;
    if($h == 0){
      return "$m:$s";
    }else{
      $m = "0$m" if $m < 10;
      return "$h:$m:$s";
    }
  }else{
    return sprintf "%.2f", $len;
  }
}

&main(@ARGV);
