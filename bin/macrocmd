#!/usr/bin/perl
use strict;
use warnings;

#Takes a filename and returns the content as a large string
sub slurp($){
  my $infile = shift;
  local($/, *INFH);
  open INFH, '<', $infile or
    die "Error opening $infile for reading\n";
  my $content = <INFH>;
  close INFH;
  return $content;
}


my $cmd = shift;
if($cmd !~ /[0-9][0-9]?/ or $cmd > 12 or $cmd == 0){
  die "Usage: macrocmd [1 - 12]";
}

my $home = `echo \${HOME}`;
chomp $home;
my $gconf = '.gconf/apps/metacity/global_keybindings/%gconf.xml';
my $xmlfile = "$home/$gconf";

print `chmod u+r $xmlfile`;

my $xml = slurp $xmlfile;
$xml =~ /
  <entry\ name="run_command_$cmd" [^>]* >
    [ \t\n]* <stringvalue>(.*?)<\/stringvalue> [ \t\n]*
  <\/entry>
/sxi;

my $value = $1;
$value =~ s/&amp;/\&/gsxi;
$value =~ s/&lt;/\</gsxi;
$value =~ s/&gt;/\>/gsxi;

my $start='';
my $end='';
foreach my $modifier ($value =~ /<([^>]+)>/g){
  $start .= "KeyStrPress $modifier\_L\n";
  $end = "KeyStrRelease $modifier\_L\n" . $end;
}

$value =~ s/<([^>]+)>//gsxi;
$start .= "KeyStrPress $value\n";
$end = "KeyStrRelease $value\n" . $end;

print `echo "$start\n$end" | xmacroplay \$DISPLAY &>/dev/null`;

