#!/usr/bin/perl
use strict;
use warnings;

my $LAUNCHERS = "\$HOME/.dzen2/launchers";

sub raise($){
  my $text = shift;
  return "^p(;-8)$text^p(;8)";
}
sub lower($){
  my $text = shift;
  return "^p(;3)$text^p(;-3)";
}

sub addClickAction($$$){
  my $button = shift;
  my $cmd = shift;
  my $markup = shift;
  return "^ca($button, $cmd)$markup^ca()";
}

sub twoTextRows($$){
  my $top = shift;
  my $bot = shift;

  my $fst;
  my $snd;
  if(length $top > length $bot){
    $fst = lower($bot);
    $snd = raise($top);
  }else{
    $fst = raise($top);
    $snd = lower($bot);
  }

  return ''
   . '^ib(1)'
   . '^p(_LOCK_X)'
   . $fst
   . '^p(_UNLOCK_X)'
   . $snd
   . '^ib(0)'
   ;
}

my $top = `date +'%a %b %d'`;
chomp $top;
my $bot = `date +'%H:%M:%S'`;
chomp $bot;

my $markup = twoTextRows $top, $bot;
$markup = addClickAction(1, "$LAUNCHERS/calendar", $markup);
print " $markup ";

#%at    album title
#%aa    album artist
#%aA    album artist (lowercase)
#%as    album artist sortname
#%aS    album artist sortname (lowercase)
#%ay    album year
#%ag    album genre
#%aG    album genre (lowercase)
#%an    album disc number
#%aN    album disc number, zero padded
#%st    stream title
#%tn    track number (i.e 8)
#%tN    track number, zero padded (i.e 08)
#%tt    track title
#%ta    track artist
#%tA    track artist (lowercase)
#%ts    track artist sortname
#%tS    track artist sortname (lowercase)
#%td    track duration
#%te    track elapsed time

